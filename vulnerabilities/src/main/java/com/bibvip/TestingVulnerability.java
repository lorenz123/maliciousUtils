package com.bibvip;

import lombok.extern.slf4j.Slf4j;
import org.openqa.selenium.WebDriver;

import java.io.IOException;
import java.util.Scanner;
import java.util.concurrent.TimeoutException;

import static com.bibvip.utility.vulnerabilities.PageBrokenImagesUtil.checkBrokenImages;
import static com.bibvip.utility.vulnerabilities.PageLinksErrorUtil.checkPageLinksForErrors;
import static com.bibvip.utility.vulnerabilities.JavascriptErrorsUtil.extractJSLogsInfo;
import static com.bibvip.utility.vulnerabilities.PageLoadTimeUtil.getPageLoadTime;


/**
 *
 * This class is used for testing the utility classes on this module.
 */
@Slf4j
public class TestingVulnerability extends Vulnerability {

    public TestingVulnerability(WebDriver driver) throws TimeoutException, IOException {
        setVulName("FullLoadTime Vulnerability");
        setErrorOfVul("FullLoadTime Vulnerability has error");

        Scanner userInput = new Scanner(System.in);
        System.out.println("What page do you want to test?");
        System.out.println("[1] Home | [2] Spot | [3] Futures (Only input the number)");

        String pageNumber = userInput.nextLine();
        switch (pageNumber) {
            case "1":
                String homeURL = "https://www.bibvip.com/en_US";
                getPageLoadTime(homeURL);
                extractJSLogsInfo(driver);
//                checkBrokenImages(driver);
//                checkPageLinksForErrors(driver);
                break;
            case "2":
                String spotURL = "https://www.bibvip.com/en_US/spot/BTC_USDT";
                getPageLoadTime(spotURL);
                extractJSLogsInfo(driver);
                checkBrokenImages(driver);
                checkPageLinksForErrors(driver);
                break;
            case "3":
                String futuresURL = "https://www.bibvip.com/en_US/futures";
                getPageLoadTime(futuresURL);
                extractJSLogsInfo(driver);
                checkBrokenImages(driver);
                checkPageLinksForErrors(driver);
                break;
            default:
                log.error("unknown page is entered!");
                break;
        }
    }

}
