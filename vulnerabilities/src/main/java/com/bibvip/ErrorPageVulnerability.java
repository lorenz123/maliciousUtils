package com.bibvip;


import lombok.extern.slf4j.Slf4j;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;

import java.net.HttpURLConnection;
import java.net.URL;
import java.util.List;

import static com.bibvip.config.DriverConfig.driver;
import static com.bibvip.utility.vulnerabilities.LoadTimeUtil.exceedExpectedLoadTime;

@Slf4j
public class ErrorPageVulnerability extends Vulnerability {

    public ErrorPageVulnerability(WebDriver driver){
        setVulName("ErrorPage Vulnerability");
        setErrorOfVul("ErrorPage Vulnerability has error");

        //get list of elements with anchor tag
        List<WebElement> l = driver.findElements(By.tagName("a"));
        //iterate links
        for(int j=0; j<l.size(); j++) {
            WebElement e = l.get(j);
            //get URL of links with getAttribute()
            String u = e.getAttribute("href");
            // to catch MalFormedURLException
            try{
                //object of URL class
                URL link = new URL(u);
                // establish connection URL object

                long start = System.currentTimeMillis();
                HttpURLConnection c = (HttpURLConnection)link.openConnection();
                long finish = System.currentTimeMillis();
                long totalTime = finish - start;
                log.info("Loading per each get: "+totalTime);
                exceedExpectedLoadTime(totalTime);

                //have timeout
                c.setConnectTimeout(1000);
                // connection began
                c.connect();
                //getResponseCode() to obtain response code
                if(c.getResponseCode()== 200) {
                    System.out.println(u+" − "+ c.getResponseMessage());
                }
                if(c.getResponseCode()== 404) {
                    System.out.println(u+" − "+c.getResponseMessage());
                }
            }
            catch (Exception ex) {
            }
        }
    }

}
